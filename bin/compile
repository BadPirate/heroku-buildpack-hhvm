#!/bin/bash

set -e
shopt -s dotglob

BASE_DIR="$( cd -P "$( dirname "$0" )" && pwd )"
BUILD_DIR="$1"
CACHE_DIR="$2"

source $BASE_DIR/common
source $BASE_DIR/linter/lint

cd "$BUILD_DIR"

# Download HHVM binaries, if necessary
cout "Vendoring HHVM ${HHVM_VERSION}"
if [ -d "$CACHE_DIR/hhvm" ]; then
  cout "$CACHE_DIR/hhvm exists, not downloading";
else
  cout "Downloading HHVM"
  [ ! -d "CACHE_DIR" ] && mkdir -p "$CACHE_DIR"
  mkdir "$CACHE_DIR/hhvm"
  fetch_package "$CACHE_DIR/hhvm"
fi

# Install HHVM binaries
cout "Vendoring binaries into slug"
[ ! -d "$BUILD_DIR/vendor" ] && mkdir -p "$BUILD_DIR/vendor"
cp -R "$CACHE_DIR/hhvm/" "vendor/hhvm"

# Source config file
cout "Sourcing config.hdf"
if [ -f "$BUILD_DIR/config.hdf" ]; then
  cout "Found custom config.hdf, linting"

  lint_results="$(lint "$BUILD_DIR/config.hdf")"
  
  if [ "$lint_results" ]; then
    echo "$lint_results"
    cout "Aborting - can't push bad config"
    exit 1
  else 
    cout "Config file is valid, uploading"
    cp "$BUILD_DIR/config.hdf" "vendor/hhvm"
  fi
else 
  cout "Custom config.hdf not found, applying default"
  cp "$BASE_DIR/../conf/config.hdf" "vendor/hhvm"
fi

# Test that all packages were fetched and extracted successfully
test -d "vendor/hhvm"

if [ -n "$BUILDPACK_DEBUG" ]; then
    ls -R vendor/hhvm
fi
